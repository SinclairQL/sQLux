name: Build Linux x86-64

on:
  push:
    branches: [ none ]
  pull_request:
    branches: [ none ]

env:
  BUILD_TYPE: Release

jobs:
  build_job:

    name: Build on Ubuntu 22.04

    runs-on: ubuntu-22.04

    continue-on-error: true

    steps:

      - name: 'Cleanup build folder'
        run: |
          pwd
          mkdir build || true
          ls -la ./build || true
          rm -rf ./build/* || true
          rm -rf ./build/.??* || true
          ls -la ./

      - uses: actions/checkout@v4
        with:
          filter: "blob:none"
          fetch-tags: 'true'
          fetch-depth: '1000'
          submodules: 'true'

      - name: Get Version and ReleaseTag
        run: |
          if [[ "xxx${{ github.event.ref }}" =~ ^xxxrefs/tags/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            RELEASE_TAG="${{ github.event.ref }}"
            RELEASE_DESCR="Release"
            RELEASE_PRERELEASE="false"
          else
            RELEASE_TAG="latest"
            RELEASE_DESCR="Development"
            RELEASE_PRERELEASE="true"
          fi
          echo "############### RELEASE_TAG        = ${RELEASE_TAG}"
          echo "RELEASE_TAG=${RELEASE_TAG}"                                  >> $GITHUB_ENV
          echo "############### RELEASE_DESCR      = ${RELEASE_DESCR}"
          echo "RELEASE_DESCR=${RELEASE_DESCR}"                              >> $GITHUB_ENV
          echo "############### RELEASE_PRERELEASE = ${RELEASE_PRERELEASE}"
          echo "RELEASE_PRERELEASE=${RELEASE_PRERELEASE}"                    >> $GITHUB_ENV
          echo "############### showing all known tags"
          git tag
          echo "############### Building version '${RELEASE_TAG}'"

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y git cmake libsdl2-dev

      - name: Configure CMake
        run: |
          echo "############### configuring cmake"
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DSUPPORT_SHADERS=True

      - name: Build
        run: |
          echo "############### building with cmake"
          cmake --version
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 4

      - name: Create artifact
        run: |
          mkdir                         sqlux-linux-Ubuntu-22.04-${{ env.RELEASE_TAG }}/
          cp -v  examples/sqlux.ini     sqlux-linux-Ubuntu-22.04-${{ env.RELEASE_TAG }}/
          cp -vr examples/mdv*          sqlux-linux-Ubuntu-22.04-${{ env.RELEASE_TAG }}/
          cp -vr roms                   sqlux-linux-Ubuntu-22.04-${{ env.RELEASE_TAG }}/
          cp -v  build/sqlux            sqlux-linux-Ubuntu-22.04-${{ env.RELEASE_TAG }}/
          zip -r sqlux-linux-Ubuntu-22.04-${{ env.RELEASE_TAG }}.zip \
            sqlux-linux-Ubuntu-22.04-${{ env.RELEASE_TAG }}/

      - name: Upload Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "Linux-x86_64-${{ env.RELEASE_TAG }}"
          prerelease: ${{ env.RELEASE_PRERELEASE }}
          title: "Linux-x86_64-ubuntu22.04 ${{ env.RELEASE_DESCR }} Build"
          files: |
            sqlux-linux-*.zip
