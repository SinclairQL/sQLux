name: Build Linux arm

on:
  push:
    branches: [ none ]
  pull_request:
    branches: [ none ]

env:
  BUILD_TYPE: Release

jobs:
  build_job:

    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}

    runs-on: ubuntu-22.04

    continue-on-error: true

    strategy:
      matrix:
        include:
          - arch: aarch64
            arch_source: arm64
            distro: ubuntu22.04
            distroDescr: ubuntu22.04-jammy
          - arch: armv7
            arch_source: armhf
            distro: ubuntu22.04
            distroDescr: ubuntu22.04-jammy
          - arch: armv7
            arch_source: armhf
            distro: buster
            distroDescr: debian10-buster
          - arch: armv7
            arch_source: armhf
            distro: bullseye
            distroDescr: debian11-bullseye

    steps:

      - name: 'Cleanup build folder'
        run: |
          pwd
          mkdir build || true
          ls -la ./build || true
          rm -rf ./build/* || true
          rm -rf ./build/.??* || true
          ls -la ./

      - uses: actions/checkout@v4
        with:
          filter: "blob:none"
          fetch-tags: 'true'
          fetch-depth: '1000'
          submodules: 'true'

      - name: Get Version and ReleaseTag
        run: |
          if [[ "xxx${{ github.event.ref }}" =~ ^xxxrefs/tags/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            RELEASE_TAG="${{ github.event.ref }}"
            RELEASE_DESCR="Release"
            RELEASE_PRERELEASE="false"
          else
            RELEASE_TAG="latest"
            RELEASE_DESCR="Development"
            RELEASE_PRERELEASE="true"
          fi
          echo "############### RELEASE_TAG        = ${RELEASE_TAG}"
          echo "RELEASE_TAG=${RELEASE_TAG}"                                  >> $GITHUB_ENV
          echo "############### RELEASE_DESCR      = ${RELEASE_DESCR}"
          echo "RELEASE_DESCR=${RELEASE_DESCR}"                              >> $GITHUB_ENV
          echo "############### RELEASE_PRERELEASE = ${RELEASE_PRERELEASE}"
          echo "RELEASE_PRERELEASE=${RELEASE_PRERELEASE}"                    >> $GITHUB_ENV
          echo "############### showing all known tags"
          git tag
          echo "############### Building version '${RELEASE_TAG}'"

      - uses: uraimo/run-on-arch-action@v2.6.0
        name: Build
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}

          githubToken: ${{ github.token }}

          shell: /bin/sh

          install: |
            case "${{ matrix.distro }}" in
              ubuntu*|jessie|stretch|buster|bullseye)
                apt-get update  -q -y
                apt-get install -q -y git libsdl2-dev cmake gcc g++ make
                ;;
            esac

          run: |
            git config --global --add safe.directory ${PWD}
            git config --global --add safe.directory ${PWD}/sQLux
            git config --global --add safe.directory ${PWD}/sQLux/args
            git config --global --add safe.directory ${PWD}/sQLux/sdl-gpu
            git config --global --add safe.directory ${PWD}/sQLux/sds
            echo "############### configuring cmake"
            cmake -B ${{github.workspace}}/build     \
              -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
              -DCMAKE_TOOLCHAIN_FILE=Toolchain-${{ matrix.arch_source }}.cmake
            echo "############### building with cmake"
            cmake --version
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 4

      - name: Create Package
        run: |
          mkdir                         sqlux-linux-${{ matrix.arch }}-${{ matrix.distro }}-${{ env.RELEASE_TAG }}/
          cp -v  examples/sqlux.ini     sqlux-linux-${{ matrix.arch }}-${{ matrix.distro }}-${{ env.RELEASE_TAG }}/
          cp -vr examples/mdv*          sqlux-linux-${{ matrix.arch }}-${{ matrix.distro }}-${{ env.RELEASE_TAG }}/
          cp -vr roms                   sqlux-linux-${{ matrix.arch }}-${{ matrix.distro }}-${{ env.RELEASE_TAG }}/
          cp -v  build/sqlux            sqlux-linux-${{ matrix.arch }}-${{ matrix.distro }}-${{ env.RELEASE_TAG }}/
          zip -r sqlux-linux-${{ matrix.arch }}-${{ matrix.distro }}-${{ env.RELEASE_TAG }}.zip \
            sqlux-linux-${{ matrix.arch }}-${{ matrix.distro }}-${{ env.RELEASE_TAG }}/

      - name: Upload Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "Linux-${{ matrix.arch }}-${{ matrix.distroDescr }}-${{ env.RELEASE_TAG }}"
          prerelease: ${{ env.RELEASE_PRERELEASE }}
          title: "Linux-${{ matrix.arch }}-${{ matrix.distroDescr }} ${{ env.RELEASE_DESCR }} Build"
          files: |
            sqlux-linux-*.zip
